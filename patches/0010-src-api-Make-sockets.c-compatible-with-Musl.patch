From 9125cccb6d4fa4452a22774b004090ec056d762a Mon Sep 17 00:00:00 2001
Message-Id: <9125cccb6d4fa4452a22774b004090ec056d762a.1669455026.git.razvand@unikraft.io>
From: Razvan Deaconescu <razvand@unikraft.io>
Date: Sun, 20 Nov 2022 17:11:56 +0200
Subject: [PATCH 1/2] src/api: Make sockets.c compatible with Musl

Remove functions, macros and variables from `src/api/sockets.c` to make
it compatible with Musl.

Signed-off-by: Razvan Deaconescu <razvand@unikraft.io>
---
 src/api/sockets.c | 18 +++++-------------
 1 file changed, 5 insertions(+), 13 deletions(-)

diff --git a/src/api/sockets.c b/src/api/sockets.c
index 097a6a9..5eb8362 100644
--- a/src/api/sockets.c
+++ b/src/api/sockets.c
@@ -37,6 +37,8 @@
  *
  */
 
+#define _BSD_SOURCE
+
 #include <sys/time.h>
 
 #include "lwip/opt.h"
@@ -65,6 +67,8 @@
 #endif
 
 #include <string.h>
+#include <fcntl.h>
+#include <sys/ioctl.h>
 
 #ifdef LWIP_HOOK_FILENAME
 #include LWIP_HOOK_FILENAME
@@ -88,8 +92,8 @@
 #define API_SELECT_CB_VAR_FREE(name)              API_VAR_FREE(MEMP_SELECT_CB, name)
 
 #if LWIP_IPV4
+#define SIN_ZERO_LEN 8
 #define IP4ADDR_PORT_TO_SOCKADDR(sin, ipaddr, port) do { \
-      (sin)->sin_len = sizeof(struct sockaddr_in); \
       (sin)->sin_family = AF_INET; \
       (sin)->sin_port = lwip_htons((port)); \
       inet_addr_from_ip4addr(&(sin)->sin_addr, ipaddr); \
@@ -101,7 +105,6 @@
 
 #if LWIP_IPV6
 #define IP6ADDR_PORT_TO_SOCKADDR(sin6, ipaddr, port) do { \
-      (sin6)->sin6_len = sizeof(struct sockaddr_in6); \
       (sin6)->sin6_family = AF_INET6; \
       (sin6)->sin6_port = lwip_htons((port)); \
       (sin6)->sin6_flowinfo = 0; \
@@ -699,9 +702,6 @@ lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)
     }
 
     IPADDR_PORT_TO_SOCKADDR(&tempaddr, &naddr, port);
-    if (*addrlen > tempaddr.sa.sa_len) {
-      *addrlen = tempaddr.sa.sa_len;
-    }
     MEMCPY(addr, &tempaddr, *addrlen);
 
     LWIP_DEBUGF(SOCKETS_DEBUG, ("lwip_accept(%d) returning new sock=%d addr=", s, newsock));
@@ -1044,11 +1044,6 @@ lwip_sock_make_addr(struct netconn *conn, ip_addr_t *fromaddr, u16_t port,
 #endif /* LWIP_IPV4 && LWIP_IPV6 */
 
   IPADDR_PORT_TO_SOCKADDR(&saddr, fromaddr, port);
-  if (*fromlen < saddr.sa.sa_len) {
-    truncated = 1;
-  } else if (*fromlen > saddr.sa.sa_len) {
-    *fromlen = saddr.sa.sa_len;
-  }
   MEMCPY(from, &saddr, *fromlen);
   return truncated;
 }
@@ -2745,9 +2740,6 @@ lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)
   ip_addr_debug_print_val(SOCKETS_DEBUG, naddr);
   LWIP_DEBUGF(SOCKETS_DEBUG, (" port=%"U16_F")\n", port));
 
-  if (*namelen > saddr.sa.sa_len) {
-    *namelen = saddr.sa.sa_len;
-  }
   MEMCPY(name, &saddr, *namelen);
 
   sock_set_errno(sock, 0);
-- 
2.17.1

